name: Dummy Build Workflow

on:
  push:
    branches:
      - master

  workflow_dispatch:
    inputs:
      build_option:
        description: 'Build options'
        required: true
        default: 'b'
        type: choice
        options:
          - b
          - m

      post_build_targets:
        description: 'Post-build options'
        required: true
        default: 'alpha'
        type: choice
        options:
          - alpha
          - beta
          - gamma
          - delta

jobs:
  checkout-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Simulate Build
        run: |
          echo "Running dummy build with option: ${{ github.event.inputs.build_option || 'b' }}"
          mkdir -p output
          echo "dummy binary" > output/file1.txt
          echo "dummy hex" > output/file2.txt
          echo "dummy map" > output/file3.txt
          echo "dummy mdf" > output/file4.txt

  upload-build-artifacts:
    runs-on: ubuntu-latest
    needs: checkout-and-build
    steps:
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Dummy_Build_${{ github.sha }}
          path: |
            output/file1.txt
            output/file2.txt
            output/file3.txt
            output/file4.txt

  post-build-alpha:
    runs-on: ubuntu-latest
    needs: upload-build-artifacts
    if: github.event_name == 'push'
    steps:
      - name: Run ALPHA task
        run: echo "Simulating ALPHA post-build step"

      - name: Upload ALPHA Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Dummy_PostBuild_ALPHA_${{ github.sha }}
          path: output/

  post-build-beta:
    runs-on: ubuntu-latest
    needs: post-build-alpha
    if: github.event_name == 'push'
    steps:
      - name: Run BETA task
        run: echo "Simulating BETA post-build step"

      - name: Upload BETA Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Dummy_PostBuild_BETA_${{ github.sha }}
          path: output/

  post-build-gamma:
    runs-on: ubuntu-latest
    needs: post-build-beta
    if: github.event_name == 'push'
    steps:
      - name: Run GAMMA task
        run: echo "Simulating GAMMA post-build step"

      - name: Upload GAMMA Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Dummy_PostBuild_GAMMA_${{ github.sha }}
          path: output/

  post-build-delta:
    runs-on: ubuntu-latest
    needs: post-build-gamma
    if: github.event_name == 'push'
    steps:
      - name: Run DELTA task
        run: echo "Simulating DELTA post-build step"

      - name: Upload DELTA Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Dummy_PostBuild_DELTA_${{ github.sha }}
          path: output/

  post-build-alpha-manual:
    runs-on: ubuntu-latest
    needs: upload-build-artifacts
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.post_build_targets == 'alpha'
    steps:
      - name: Manual ALPHA step
        run: echo "Running manual ALPHA step"

      - name: Upload ALPHA Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Dummy_Manual_ALPHA_${{ github.sha }}
          path: output/

  post-build-beta-manual:
    runs-on: ubuntu-latest
    needs: upload-build-artifacts
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.post_build_targets == 'beta'
    steps:
      - name: Manual BETA step
        run: echo "Running manual BETA step"

      - name: Upload BETA Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Dummy_Manual_BETA_${{ github.sha }}
          path: output/

  post-build-gamma-manual:
    runs-on: ubuntu-latest
    needs: upload-build-artifacts
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.post_build_targets == 'gamma'
    steps:
      - name: Manual GAMMA step
        run: echo "Running manual GAMMA step"

      - name: Upload GAMMA Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Dummy_Manual_GAMMA_${{ github.sha }}
          path: output/

  post-build-delta-manual:
    runs-on: ubuntu-latest
    needs: upload-build-artifacts
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.post_build_targets == 'delta'
    steps:
      - name: Manual DELTA step (with beta + gamma + delta)
        run: |
          echo "Simulating manual BETA step"
          echo "Simulating manual GAMMA step"
          echo "Simulating manual DELTA step"

      - name: Upload DELTA Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Dummy_Manual_DELTA_${{ github.sha }}



# Add this job at the end of your workflow file

  release:
    runs-on: ubuntu-latest
    needs: upload-build-artifacts
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create Tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME="v$(date +'%Y.%m.%d.%H%M%S')"  # Tag format: vYYYY.MM.DD.HHMMSS
          echo "Generated tag: $TAG_NAME"
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag $TAG_NAME
          git push origin $TAG_NAME

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: Dummy_Build_${{ github.sha }}
          path: release-output/

      - name: Zip build artifacts
        run: |
          cd release-output
          zip -r ../my-app.zip .
          cd ..

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Release ${{ env.TAG_NAME }}
          body: |
            Release created automatically by GitHub Actions.
          draft: false
          prerelease: false

      - name: Upload zipped artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: my-app.zip
          asset_name: my-app.zip
          asset_content_type: application/zip

          path: output/
